.feedback-form {
  $b: &;

  display: block;
  width: 100%;
  z-index: 10;
  background-clip: content-box;
  top: 0;
  left: 0;
  box-sizing: border-box;
  transition: transform $ease-main, visibility 0s ease, opacity $ease-main;
  transition-delay: 0s, .3s, 0s;
  visibility: hidden;
  pointer-events: none;
  opacity: 0;

  @include ruleMin(transform, (xs: translate3d(100%, 0, 0), sm: translate3d(0, 0, 0)));
  @include ruleMin(height, (xs: 100%, sm: auto));
  @include ruleMin(padding-top, (xs: 60px, sm: 110px));
  @include ruleMin(background-color, (xs: $color-white, sm: $color-bg-gray2));
  @include ruleMin(position, (xs: fixed, md: absolute));

  .container {
    position: relative;
  }

  &__head {
    @include ruleMin(display, (xs: block, sm: none));

    width: 100%;
    padding: 32px 0 0;
  }

  &__title {
    display: block;
    text-align: center;
    width: 100%;
    font-size: 24px;
    line-height: 1.2;
    font-weight: 600;
  }

  &__close {
    display: flex;
    justify-content: flex-start;
    align-items: center;

    &:not(:first-child) {
      margin-top: 25px;
    }
  }

  &__close-text {
    font-size: 15px;
    line-height: 1.33;
    font-weight: 600;
    color: $color-input;
  }

  &__back {
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    width: 19px;
    height: 19px;
    border-radius: 50%;
    border: 1px solid $color-silk-rich;

    &:not(:last-child) {
      margin-right: 8px;
    }
  }

  &__icon {
    fill: $color-silk-rich;
    width: 5px;
    height: 8px;
    transform-origin: 50% 50% 0;
    transform: rotate(180deg);
    margin-left: -2px;
  }

  &__content {
    @include ruleMin(border, (xs: 1px solid $color-form-border, sm: none));
    @include ruleMin(padding, (xs: 28px 20px, sm: 40px 0));

    &:not(:first-child) {
      @include ruleMin(margin-top, (xs: 12px, sm: 0));
    }
  }

  &__form {

    .form {

      &__button {
        min-width: 158px;

        @include ruleMin(width, (sm: 100%));
        @include ruleMin(height, (xs: 40px, sm: 50px));
        @include ruleMin(line-height, (xs: 40px, sm: 50px));
      }
    }
  }

  &.is-active {
    transform: translate3d(0, 0, 0);
    transition-delay: 0s;
    visibility: visible;
    opacity: 1;

    .container {
      pointer-events: auto;
    }
  }

  &_fxp {
    @include ruleMin(padding-top, (xs: 72px, sm: 80px, md: 110px));
  }
}
